<!-- MainWindow.xaml -->
<!--  
     This file defines the main window of the email client application.
     It sets up the window title, icon, size, and layout. The layout includes:
       (a) A logo section.
       (b) A main menu with File and Message options.
       (c) A main content area divided into three columns:
           - A sidebar (TreeView) for folders.
           - An email list (ListView) showing email summaries.
           - An email details panel showing full details of the selected email.
-->
<Window x:Class="WPF_HCI.MainWindow"
        x:Name="WindowRoot"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WPF_HCI"
        xmlns:converters="clr-namespace:WPF_HCI.Converters"
        Title="P Email" 
        Icon="/logo_2.png"
        Height="600" Width="1000" MinHeight="400" MinWidth="800"
        FontFamily="Segoe UI">
    <!-- Window.Resources: Define reusable resources like colors and converters -->
    <Window.Resources>
        <!-- Theme colors for consistent styling -->
        <SolidColorBrush x:Key="DarkBackgroundColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="LightBackgroundColor" Color="#333333"/>
        <SolidColorBrush x:Key="AccentBlueColor" Color="#3A7CA5"/>
        <SolidColorBrush x:Key="AccentGrayColor" Color="#A9A9A9"/>
        <SolidColorBrush x:Key="TextColor" Color="White"/>
        <SolidColorBrush x:Key="TextGrayColor" Color="#D3D3D3"/>
        <SolidColorBrush x:Key="LightGrayColor" Color="#D3D3D3"/>
        <SolidColorBrush x:Key="BorderColor" Color="#A9A9A9"/>
        <!-- Converter to change boolean values to text if needed -->
        <converters:BooleanToTextConverter x:Key="BooleanToTextConverter"/>
    </Window.Resources>

    <!-- Main Grid container for overall layout -->
    <Grid Background="{StaticResource DarkBackgroundColor}">
        <!-- Define rows for logo, menu, and main content -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Row 0: Logo Section -->
            <RowDefinition Height="Auto"/>
            <!-- Row 1: Menu Section -->
            <RowDefinition Height="*"/>
            <!-- Row 2: Main Content (remaining space) -->
        </Grid.RowDefinitions>

        <!-- (a) Logo Section -->
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
            <!-- Display the application logo on the top-left -->
            <Image Source="logo.png" HorizontalAlignment="Left" VerticalAlignment="Center"
                   Margin="10,0,0,0" Width="40" Height="40"/>
        </Grid>

        <!-- (b) Main Menu Section -->
        <Menu Grid.Row="1" Background="{StaticResource LightBackgroundColor}" Foreground="{StaticResource TextColor}">
            <!-- "File" Menu -->
            <MenuItem Header="File" Foreground="{StaticResource TextColor}">
                <!-- Icon for the File menu -->
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/file.webp"/>
                </MenuItem.Icon>
                <!-- "Exit" MenuItem that calls the Exit_Click event handler -->
                <MenuItem Header="Exit" Click="Exit_Click" Foreground="{StaticResource DarkBackgroundColor}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/exit.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <!-- "Message" Menu -->
            <MenuItem Header="Message" Foreground="{StaticResource TextColor}">
                <!-- Icon for the Message menu -->
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/message.webp"/>
                </MenuItem.Icon>
                <!-- "New Static" MenuItem bound to the AddStaticEmailCommand -->
                <MenuItem Header="New Static" Foreground="{StaticResource DarkBackgroundColor}" 
                          Command="{Binding AddStaticEmailCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/new-message.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!-- "Edit Static" MenuItem bound to the EditDraftEmailCommand -->
                <MenuItem Header="Edit Static" Foreground="{StaticResource DarkBackgroundColor}" 
                          Command="{Binding DataContext.EditDraftEmailCommand, ElementName=WindowRoot}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/edit.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!-- "New" MenuItem -->
                <MenuItem Header="New" Foreground="{StaticResource DarkBackgroundColor}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/new-message.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!-- "Edit" MenuItem -->
                <MenuItem Header="Edit" Foreground="{StaticResource DarkBackgroundColor}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/edit.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!-- "Delete" MenuItem bound to the DeleteEmailCommand -->
                <MenuItem Header="Delete" Foreground="{StaticResource DarkBackgroundColor}"
                          Command="{Binding DataContext.DeleteEmailCommand, ElementName=WindowRoot}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/delete.webp"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!-- (c) Main Content Area -->
        <Grid Grid.Row="2">
            <!-- Define three columns: Sidebar, Email List, and Email Details -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <!-- Column 0: Sidebar -->
                <ColumnDefinition Width="4*"/>
                <!-- Column 1: Email List -->
                <ColumnDefinition Width="5*"/>
                <!-- Column 2: Email Details -->
            </Grid.ColumnDefinitions>

            <!-- (c1) Sidebar: TreeView for displaying mailboxes/folders -->
            
                <TreeView Name="FolderTree"
          Grid.Column="0"
          Margin="5"
          FontFamily="Segoe UI"
          Background="{StaticResource LightBackgroundColor}"
          SelectedItemChanged="FolderTree_SelectedItemChanged">

                    <!-- ItemContainerStyle overrides the default appearance of TreeViewItems -->
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <!-- Default colors for child items (no children) -->
                            <Setter Property="Foreground" Value="{StaticResource TextGrayColor}"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

                            <Style.Triggers>
                                <!-- Make top-level items (HasItems == true) more visible: white + bold -->
                                <Trigger Property="HasItems" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>

                                <!-- Change background when mouse hovers over an item -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#444444"/>
                                </Trigger>

                                <!-- Highlight selected items with AccentBlueColor and white text -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBlueColor}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <!-- Example mailboxes and folders -->
                    <TreeViewItem Header="Mailbox 1">
                        <TreeViewItem Header="Inbox" Tag="Inbox1"/>
                        <TreeViewItem Header="Sent" Tag="Sent1"/>
                        <TreeViewItem Header="Drafts" Tag="Drafts1"/>
                        <TreeViewItem Header="Trash" Tag="Trash1"/>
                    </TreeViewItem>
                    <TreeViewItem Header="Mailbox 2">
                        <TreeViewItem Header="Inbox" Tag="Inbox2"/>
                        <TreeViewItem Header="Sent" Tag="Sent2"/>
                        <TreeViewItem Header="Drafts" Tag="Drafts2"/>
                        <TreeViewItem Header="Trash" Tag="Trash2"/>
                    </TreeViewItem>
                </TreeView>



            <!-- (c2) Email List Section -->
            <Grid Grid.Column="1" Margin="5">
                <!-- Define rows for search/filter controls, the toggle button, and the ListView -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!-- Row 0: Search & Filter controls -->
                    <RowDefinition Height="Auto"/>
                    <!-- Row 1: Toggle Important button -->
                    <RowDefinition Height="*"/>
                    <!-- Row 2: Email List -->
                </Grid.RowDefinitions>

                <!-- Search and Filter Controls -->
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5">
                    <!-- TextBox for search queries -->
                    <TextBox Name="SearchBox" Width="200" Height="25" Text="Search..."
                             Foreground="{StaticResource TextGrayColor}"
                             GotFocus="SearchBox_GotFocus" LostFocus="SearchBox_LostFocus"
                             TextChanged="SearchBox_TextChanged"
                             Background="{StaticResource LightBackgroundColor}"
                             FontFamily="Segoe UI"/>
                    <!-- ComboBox for filtering emails -->
                    <ComboBox Name="FilterBox" Width="120" Height="25"
                              SelectionChanged="FilterBox_SelectionChanged"
                              Background="{StaticResource LightBackgroundColor}"
                              Foreground="{StaticResource DarkBackgroundColor}"
                              FontFamily="Segoe UI">
                        <ComboBoxItem Content="All" IsSelected="True" Foreground="{StaticResource DarkBackgroundColor}"/>
                        <ComboBoxItem Content="Unread" Foreground="{StaticResource DarkBackgroundColor}"/>
                        <ComboBoxItem Content="Important" Foreground="{StaticResource DarkBackgroundColor}"/>
                    </ComboBox>
                </StackPanel>

                <!-- Toggle Important Button -->
                <Button Content="Toggle Important" Grid.Row="1" Margin="10" HorizontalAlignment="Left"
                        Background="DodgerBlue" Foreground="White" Click="ToggleImportant_Click"/>

                <!-- ListView for displaying email summaries -->
                <ListView Name="EmailList"
                          ItemsSource="{Binding FilteredEmails}"
                          SelectedItem="{Binding SelectedEmail, Mode=TwoWay}"
                          Grid.Row="2"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          MouseDoubleClick="EmailList_DoubleClick"
                          Background="{StaticResource LightBackgroundColor}"
                          FontFamily="Segoe UI"
                          Foreground="{StaticResource TextColor}">
                    <!-- Ensure each ListView item aligns at the top -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!-- ItemTemplate for each email -->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <!-- Border for email item with rounded corners -->
                            <Border x:Name="EmailBorder"
                                    BorderBrush="{StaticResource BorderColor}"
                                    BorderThickness="1"
                                    Padding="10"
                                    Margin="5"
                                    CornerRadius="8"
                                    MaxHeight="80">
                                <!-- Drop shadow for visual depth -->
                                <Border.Effect>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="5"
                                                      ShadowDepth="2"
                                                      Opacity="0.3"/>
                                </Border.Effect>
                                <!-- StackPanel to layout email properties vertically -->
                                <StackPanel Orientation="Vertical">
                                    <!-- Email subject -->
                                    <TextBlock x:Name="SubjectTextBlock"
                                               Text="{Binding Subject}"
                                               FontWeight="Bold"
                                               FontSize="14"
                                               Margin="0,0,0,4"/>
                                    <!-- Email sender -->
                                    <TextBlock x:Name="SenderTextBlock"
                                               Text="{Binding Sender}"
                                               FontStyle="Italic"
                                               FontSize="12"
                                               Margin="0,0,0,4"/>
                                    <!-- Date the email was sent -->
                                    <TextBlock x:Name="DateSentTextBlock"
                                               Text="{Binding DateSent, StringFormat='{}{0:MMM dd, yyyy}'}"
                                               FontSize="12"
                                               Margin="0,0,0,4"/>
                                </StackPanel>
                            </Border>

                            <!-- DataTemplate triggers to update appearance on hover and for important emails -->
                            <DataTemplate.Triggers>
                                <!-- When mouse is over the email, change background to dark gray -->
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter TargetName="EmailBorder" Property="Background" Value="#444444"/>
                                </Trigger>
                                <!-- If the email is marked as important, highlight with Crimson background and white text -->
                                <DataTrigger Binding="{Binding IsImportant}" Value="True">
                                    <Setter TargetName="EmailBorder" Property="Background" Value="Crimson"/>
                                    <Setter TargetName="SubjectTextBlock" Property="Foreground" Value="White"/>
                                    <Setter TargetName="SenderTextBlock" Property="Foreground" Value="White"/>
                                    <Setter TargetName="DateSentTextBlock" Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <!-- (c3) Email Details Section -->
            <Border Grid.Column="2" Margin="5" Padding="10" Background="{StaticResource LightBackgroundColor}">
                <StackPanel>
                    <!-- Display full email details when an email is selected -->
                    <TextBlock Text="{Binding SelectedEmail.Subject}" 
                               FontWeight="Bold" Foreground="{StaticResource TextColor}" 
                               FontSize="16" Margin="0,0,0,5"/>
                    <TextBlock Text="{Binding SelectedEmail.Sender}" 
                               Foreground="{StaticResource TextGrayColor}" FontStyle="Italic" 
                               FontSize="14" Margin="0,0,0,5"/>
                    <TextBlock Text="{Binding SelectedEmail.DateSent, StringFormat='{}{0:MMM dd, yyyy}'}" 
                               Foreground="{StaticResource TextGrayColor}" FontStyle="Italic" 
                               FontSize="14" Margin="0,0,0,5"/>
                    <TextBlock Text="{Binding SelectedEmail.Content}" 
                               TextWrapping="Wrap" Foreground="{StaticResource TextColor}" 
                               FontSize="14" Margin="0,0,0,5"/>
                    <!-- Attachments Section in the details pane -->
                    <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <!-- Collapse if no email is selected -->
                                    <DataTrigger Binding="{Binding SelectedEmail}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <!-- Collapse if the selected email has no attachments -->
                                    <DataTrigger Binding="{Binding SelectedEmail.Attachments.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Attachments:" FontWeight="Bold" 
                                   Foreground="{StaticResource TextColor}" FontSize="14" Margin="0,0,0,5"/>
                        <ItemsControl ItemsSource="{Binding SelectedEmail.Attachments}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
                                        <TextBlock Text="📎" FontSize="14" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding}" FontSize="14" Foreground="{StaticResource TextColor}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
